---
# Debian repository
- block:
  - name: Debian - Import repository key
    apt_key:
      url: "{{ ironic_os_repo_key }}"
      state: present
    when: ironic_os_repo_key and ironic_os_repo_key | search("http://.*")
    ignore_errors: yes

  - name: Debian - Add repository package
    apt:
      name: "{{ ironic_os_repo_key }}"
      state: latest
    when: >
      ironic_os_repo_key and not ironic_os_repo_key | search("http://.*")

  - name: Debian - Add repository url
    apt_repository:
      repo: "{{ ironic_os_repo_url }}"
      state: present

  # Aux repository
  - name: Debian - Import aux repository key
    apt_key:
      url: "{{ ironic_conductor_os_aux_repo_key }}"
      state: present
    when: ironic_conductor_os_aux_repo_key and ironic_conductor_os_aux_repo_key | search("http://.*")
    ignore_errors: yes

  - name: Debian - Add aux repository package
    apt:
      name: "{{ ironic_conductor_os_aux_repo_key }}"
      state: latest
    when: ironic_conductor_os_aux_repo_key and not ironic_conductor_os_aux_repo_key | search("http://.*")

  - name: Debian - Add aux repository url
    apt_repository:
      repo: "{{ ironic_conductor_os_aux_repo_url }}"
      state: present
    when: ironic_conductor_os_aux_repo_url

  when: ansible_os_family == 'Debian' and not ironic_os_packages
  tags: ["debian", "repository"]


# RedHat repository
- block:
  - name: RedHat - Add repository url
    yum:
      name: "{{ ironic_os_repo_url }}"
      state: present

  - name: RedHat - Import repository key
    rpm_key:
      key: "{{ ironic_os_repo_key }}"
      state: present
    when: ironic_os_repo_key != ""

  # Aux repository for shellinabox
  - name: RedHat - Add aux repository
    yum:
      name: "{{ ironic_conductor_os_aux_repo_url }}"
      state: present
    when: ironic_conductor_os_aux_repo_url != ""


  - name: RedHat - Import aux repository key
    rpm_key:
      key: "{{ ironic_conductor_os_aux_repo_key }}"
      state: present
    when: ironic_conductor_os_aux_repo_key  != ""

  when: ansible_os_family == 'RedHat' and not ironic_os_packages
  tags: ["redhat", "repository"]


- name: Check if configuration exists
  stat:
    path: "{{ ironic_config_file }}"
  register: __ironic_conf

- name: Setup configuration fact
  set_fact:
    _ironic_previous: "{{ __ironic_conf.stat.exists }}"


# Force restart all the sevices (database, messaging) if they were installed or reinstalled
- meta: flush_handlers

